// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/engine_builder.proto

package org.mozc.android.inputmethod.japanese.protobuf;

public final class ProtoEngineBuilder {
  private ProtoEngineBuilder() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EngineReloadRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mozc.EngineReloadRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
     */
    boolean hasEngineType();
    /**
     * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
     */
    org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType getEngineType();

    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    boolean hasFilePath();
    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    java.lang.String getFilePath();
    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    boolean hasInstallLocation();
    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    java.lang.String getInstallLocation();
    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    com.google.protobuf.ByteString
        getInstallLocationBytes();

    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    boolean hasMagicNumber();
    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    java.lang.String getMagicNumber();
    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    com.google.protobuf.ByteString
        getMagicNumberBytes();
  }
  /**
   * Protobuf type {@code mozc.EngineReloadRequest}
   */
  public  static final class EngineReloadRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mozc.EngineReloadRequest)
      EngineReloadRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EngineReloadRequest.newBuilder() to construct.
    private EngineReloadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EngineReloadRequest() {
      engineType_ = 0;
      filePath_ = "";
      installLocation_ = "";
      magicNumber_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EngineReloadRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType value = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                engineType_ = rawValue;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              filePath_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              installLocation_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              magicNumber_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.class, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder.class);
    }

    /**
     * <pre>
     * Specify the type of engine to build.
     * </pre>
     *
     * Protobuf enum {@code mozc.EngineReloadRequest.EngineType}
     */
    public enum EngineType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DESKTOP = 0;</code>
       */
      DESKTOP(0),
      /**
       * <code>MOBILE = 1;</code>
       */
      MOBILE(1),
      ;

      /**
       * <code>DESKTOP = 0;</code>
       */
      public static final int DESKTOP_VALUE = 0;
      /**
       * <code>MOBILE = 1;</code>
       */
      public static final int MOBILE_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EngineType valueOf(int value) {
        return forNumber(value);
      }

      public static EngineType forNumber(int value) {
        switch (value) {
          case 0: return DESKTOP;
          case 1: return MOBILE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EngineType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EngineType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EngineType>() {
              public EngineType findValueByNumber(int number) {
                return EngineType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final EngineType[] VALUES = values();

      public static EngineType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EngineType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mozc.EngineReloadRequest.EngineType)
    }

    private int bitField0_;
    public static final int ENGINE_TYPE_FIELD_NUMBER = 1;
    private int engineType_;
    /**
     * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
     */
    public boolean hasEngineType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
     */
    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType getEngineType() {
      org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType result = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType.valueOf(engineType_);
      return result == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType.DESKTOP : result;
    }

    public static final int FILE_PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object filePath_;
    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    public boolean hasFilePath() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filePath_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Path to the data file to be loaded in a new engine.
     * </pre>
     *
     * <code>required string file_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INSTALL_LOCATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object installLocation_;
    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    public boolean hasInstallLocation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    public java.lang.String getInstallLocation() {
      java.lang.Object ref = installLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          installLocation_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * If provided, also atomically renames |file_path| to this location.  Since
     * EngineBuilder validates the data file content before creating a new engine
     * instance, this option is useful when you want to perform i) data
     * verification, ii) install (file rename), and iii) engine reload at the same
     * time in Mozc server side.
     * </pre>
     *
     * <code>optional string install_location = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInstallLocationBytes() {
      java.lang.Object ref = installLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        installLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAGIC_NUMBER_FIELD_NUMBER = 4;
    private volatile java.lang.Object magicNumber_;
    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    public boolean hasMagicNumber() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    public java.lang.String getMagicNumber() {
      java.lang.Object ref = magicNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          magicNumber_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Explicitly specifies the magic number to be used for data validation.
     * Since acceptable magic number is embedded in Mozc server, this option is
     * unnecessary for normal cases.  However, this is required for some unit
     * tests as test data has a different magic number.
     * </pre>
     *
     * <code>optional string magic_number = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMagicNumberBytes() {
      java.lang.Object ref = magicNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        magicNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEngineType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilePath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, engineType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, filePath_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, installLocation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, magicNumber_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, engineType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, filePath_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, installLocation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, magicNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest)) {
        return super.equals(obj);
      }
      org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest other = (org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest) obj;

      boolean result = true;
      result = result && (hasEngineType() == other.hasEngineType());
      if (hasEngineType()) {
        result = result && engineType_ == other.engineType_;
      }
      result = result && (hasFilePath() == other.hasFilePath());
      if (hasFilePath()) {
        result = result && getFilePath()
            .equals(other.getFilePath());
      }
      result = result && (hasInstallLocation() == other.hasInstallLocation());
      if (hasInstallLocation()) {
        result = result && getInstallLocation()
            .equals(other.getInstallLocation());
      }
      result = result && (hasMagicNumber() == other.hasMagicNumber());
      if (hasMagicNumber()) {
        result = result && getMagicNumber()
            .equals(other.getMagicNumber());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEngineType()) {
        hash = (37 * hash) + ENGINE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + engineType_;
      }
      if (hasFilePath()) {
        hash = (37 * hash) + FILE_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getFilePath().hashCode();
      }
      if (hasInstallLocation()) {
        hash = (37 * hash) + INSTALL_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getInstallLocation().hashCode();
      }
      if (hasMagicNumber()) {
        hash = (37 * hash) + MAGIC_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getMagicNumber().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mozc.EngineReloadRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mozc.EngineReloadRequest)
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.class, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder.class);
      }

      // Construct using org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        engineType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        filePath_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        installLocation_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        magicNumber_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadRequest_descriptor;
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getDefaultInstanceForType() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance();
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest build() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest buildPartial() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest result = new org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.engineType_ = engineType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filePath_ = filePath_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.installLocation_ = installLocation_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.magicNumber_ = magicNumber_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest) {
          return mergeFrom((org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest other) {
        if (other == org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance()) return this;
        if (other.hasEngineType()) {
          setEngineType(other.getEngineType());
        }
        if (other.hasFilePath()) {
          bitField0_ |= 0x00000002;
          filePath_ = other.filePath_;
          onChanged();
        }
        if (other.hasInstallLocation()) {
          bitField0_ |= 0x00000004;
          installLocation_ = other.installLocation_;
          onChanged();
        }
        if (other.hasMagicNumber()) {
          bitField0_ |= 0x00000008;
          magicNumber_ = other.magicNumber_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEngineType()) {
          return false;
        }
        if (!hasFilePath()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int engineType_ = 0;
      /**
       * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
       */
      public boolean hasEngineType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
       */
      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType getEngineType() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType result = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType.valueOf(engineType_);
        return result == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType.DESKTOP : result;
      }
      /**
       * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
       */
      public Builder setEngineType(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.EngineType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        engineType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .mozc.EngineReloadRequest.EngineType engine_type = 1;</code>
       */
      public Builder clearEngineType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        engineType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object filePath_ = "";
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public boolean hasFilePath() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filePath_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public Builder clearFilePath() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the data file to be loaded in a new engine.
       * </pre>
       *
       * <code>required string file_path = 2;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filePath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object installLocation_ = "";
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public boolean hasInstallLocation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public java.lang.String getInstallLocation() {
        java.lang.Object ref = installLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            installLocation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInstallLocationBytes() {
        java.lang.Object ref = installLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          installLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public Builder setInstallLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        installLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public Builder clearInstallLocation() {
        bitField0_ = (bitField0_ & ~0x00000004);
        installLocation_ = getDefaultInstance().getInstallLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If provided, also atomically renames |file_path| to this location.  Since
       * EngineBuilder validates the data file content before creating a new engine
       * instance, this option is useful when you want to perform i) data
       * verification, ii) install (file rename), and iii) engine reload at the same
       * time in Mozc server side.
       * </pre>
       *
       * <code>optional string install_location = 3;</code>
       */
      public Builder setInstallLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        installLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object magicNumber_ = "";
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public boolean hasMagicNumber() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public java.lang.String getMagicNumber() {
        java.lang.Object ref = magicNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            magicNumber_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMagicNumberBytes() {
        java.lang.Object ref = magicNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          magicNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public Builder setMagicNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        magicNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public Builder clearMagicNumber() {
        bitField0_ = (bitField0_ & ~0x00000008);
        magicNumber_ = getDefaultInstance().getMagicNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Explicitly specifies the magic number to be used for data validation.
       * Since acceptable magic number is embedded in Mozc server, this option is
       * unnecessary for normal cases.  However, this is required for some unit
       * tests as test data has a different magic number.
       * </pre>
       *
       * <code>optional string magic_number = 4;</code>
       */
      public Builder setMagicNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        magicNumber_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mozc.EngineReloadRequest)
    }

    // @@protoc_insertion_point(class_scope:mozc.EngineReloadRequest)
    private static final org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest();
    }

    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EngineReloadRequest>
        PARSER = new com.google.protobuf.AbstractParser<EngineReloadRequest>() {
      public EngineReloadRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EngineReloadRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EngineReloadRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EngineReloadRequest> getParserForType() {
      return PARSER;
    }

    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EngineReloadResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mozc.EngineReloadResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
     */
    org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status getStatus();

    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    boolean hasRequest();
    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getRequest();
    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder getRequestOrBuilder();
  }
  /**
   * Protobuf type {@code mozc.EngineReloadResponse}
   */
  public  static final class EngineReloadResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:mozc.EngineReloadResponse)
      EngineReloadResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EngineReloadResponse.newBuilder() to construct.
    private EngineReloadResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EngineReloadResponse() {
      status_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EngineReloadResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status value = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = rawValue;
              }
              break;
            }
            case 18: {
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.class, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code mozc.EngineReloadResponse.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Reload command is accepted.
       * </pre>
       *
       * <code>ACCEPTED = 0;</code>
       */
      ACCEPTED(0),
      /**
       * <pre>
       * New data is verified and ready.
       * </pre>
       *
       * <code>RELOAD_READY = 1;</code>
       */
      RELOAD_READY(1),
      /**
       * <pre>
       * Engine was replaced by a new instance.
       * </pre>
       *
       * <code>RELOADED = 2;</code>
       */
      RELOADED(2),
      /**
       * <pre>
       * Failed to start reload becuase another reload job is currently running.
       * </pre>
       *
       * <code>ALREADY_RUNNING = 3;</code>
       */
      ALREADY_RUNNING(3),
      /**
       * <pre>
       * Erros in data file.
       * </pre>
       *
       * <code>ENGINE_VERSION_MISMATCH = 4;</code>
       */
      ENGINE_VERSION_MISMATCH(4),
      /**
       * <code>DATA_MISSING = 5;</code>
       */
      DATA_MISSING(5),
      /**
       * <code>DATA_BROKEN = 6;</code>
       */
      DATA_BROKEN(6),
      /**
       * <pre>
       * File doesn't exist or underlying memory mapping failed.
       * </pre>
       *
       * <code>MMAP_FAILURE = 7;</code>
       */
      MMAP_FAILURE(7),
      /**
       * <pre>
       * File rename is failed.
       * </pre>
       *
       * <code>INSTALL_FAILURE = 8;</code>
       */
      INSTALL_FAILURE(8),
      /**
       * <code>UNKNOWN_ERROR = 9;</code>
       */
      UNKNOWN_ERROR(9),
      ;

      /**
       * <pre>
       * Reload command is accepted.
       * </pre>
       *
       * <code>ACCEPTED = 0;</code>
       */
      public static final int ACCEPTED_VALUE = 0;
      /**
       * <pre>
       * New data is verified and ready.
       * </pre>
       *
       * <code>RELOAD_READY = 1;</code>
       */
      public static final int RELOAD_READY_VALUE = 1;
      /**
       * <pre>
       * Engine was replaced by a new instance.
       * </pre>
       *
       * <code>RELOADED = 2;</code>
       */
      public static final int RELOADED_VALUE = 2;
      /**
       * <pre>
       * Failed to start reload becuase another reload job is currently running.
       * </pre>
       *
       * <code>ALREADY_RUNNING = 3;</code>
       */
      public static final int ALREADY_RUNNING_VALUE = 3;
      /**
       * <pre>
       * Erros in data file.
       * </pre>
       *
       * <code>ENGINE_VERSION_MISMATCH = 4;</code>
       */
      public static final int ENGINE_VERSION_MISMATCH_VALUE = 4;
      /**
       * <code>DATA_MISSING = 5;</code>
       */
      public static final int DATA_MISSING_VALUE = 5;
      /**
       * <code>DATA_BROKEN = 6;</code>
       */
      public static final int DATA_BROKEN_VALUE = 6;
      /**
       * <pre>
       * File doesn't exist or underlying memory mapping failed.
       * </pre>
       *
       * <code>MMAP_FAILURE = 7;</code>
       */
      public static final int MMAP_FAILURE_VALUE = 7;
      /**
       * <pre>
       * File rename is failed.
       * </pre>
       *
       * <code>INSTALL_FAILURE = 8;</code>
       */
      public static final int INSTALL_FAILURE_VALUE = 8;
      /**
       * <code>UNKNOWN_ERROR = 9;</code>
       */
      public static final int UNKNOWN_ERROR_VALUE = 9;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      public static Status forNumber(int value) {
        switch (value) {
          case 0: return ACCEPTED;
          case 1: return RELOAD_READY;
          case 2: return RELOADED;
          case 3: return ALREADY_RUNNING;
          case 4: return ENGINE_VERSION_MISMATCH;
          case 5: return DATA_MISSING;
          case 6: return DATA_BROKEN;
          case 7: return MMAP_FAILURE;
          case 8: return INSTALL_FAILURE;
          case 9: return UNKNOWN_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:mozc.EngineReloadResponse.Status)
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
     */
    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status getStatus() {
      org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status result = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status.valueOf(status_);
      return result == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status.ACCEPTED : result;
    }

    public static final int REQUEST_FIELD_NUMBER = 2;
    private org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest request_;
    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getRequest() {
      return request_ == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance() : request_;
    }
    /**
     * <pre>
     * The original request is copied in response for convenience (the reload
     * command runs asynchronously but client doesn't need to keep the original
     * request).
     * </pre>
     *
     * <code>optional .mozc.EngineReloadRequest request = 2;</code>
     */
    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder getRequestOrBuilder() {
      return request_ == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance() : request_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getRequest());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRequest());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse)) {
        return super.equals(obj);
      }
      org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse other = (org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse) obj;

      boolean result = true;
      result = result && (hasStatus() == other.hasStatus());
      if (hasStatus()) {
        result = result && status_ == other.status_;
      }
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + status_;
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code mozc.EngineReloadResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:mozc.EngineReloadResponse)
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.class, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Builder.class);
      }

      // Construct using org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.internal_static_mozc_EngineReloadResponse_descriptor;
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse getDefaultInstanceForType() {
        return org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.getDefaultInstance();
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse build() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse buildPartial() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse result = new org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse) {
          return mergeFrom((org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse other) {
        if (other == org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
       */
      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status getStatus() {
        org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status result = org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status.valueOf(status_);
        return result == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status.ACCEPTED : result;
      }
      /**
       * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
       */
      public Builder setStatus(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .mozc.EngineReloadResponse.Status status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      private org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder> requestBuilder_;
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public Builder setRequest(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public Builder setRequest(
          org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public Builder mergeRequest(org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != null &&
              request_ != org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance()) {
            request_ =
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.getDefaultInstance() : request_;
        }
      }
      /**
       * <pre>
       * The original request is copied in response for convenience (the reload
       * command runs asynchronously but client doesn't need to keep the original
       * request).
       * </pre>
       *
       * <code>optional .mozc.EngineReloadRequest request = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequest.Builder, org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadRequestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:mozc.EngineReloadResponse)
    }

    // @@protoc_insertion_point(class_scope:mozc.EngineReloadResponse)
    private static final org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse();
    }

    public static org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EngineReloadResponse>
        PARSER = new com.google.protobuf.AbstractParser<EngineReloadResponse>() {
      public EngineReloadResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EngineReloadResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EngineReloadResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EngineReloadResponse> getParserForType() {
      return PARSER;
    }

    public org.mozc.android.inputmethod.japanese.protobuf.ProtoEngineBuilder.EngineReloadResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mozc_EngineReloadRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mozc_EngineReloadRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_mozc_EngineReloadResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_mozc_EngineReloadResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035protocol/engine_builder.proto\022\004mozc\"\272\001" +
      "\n\023EngineReloadRequest\0229\n\013engine_type\030\001 \002" +
      "(\0162$.mozc.EngineReloadRequest.EngineType" +
      "\022\021\n\tfile_path\030\002 \002(\t\022\030\n\020install_location\030" +
      "\003 \001(\t\022\024\n\014magic_number\030\004 \001(\t\"%\n\nEngineTyp" +
      "e\022\013\n\007DESKTOP\020\000\022\n\n\006MOBILE\020\001\"\275\002\n\024EngineRel" +
      "oadResponse\0221\n\006status\030\001 \002(\0162!.mozc.Engin" +
      "eReloadResponse.Status\022*\n\007request\030\002 \001(\0132" +
      "\031.mozc.EngineReloadRequest\"\305\001\n\006Status\022\014\n" +
      "\010ACCEPTED\020\000\022\020\n\014RELOAD_READY\020\001\022\014\n\010RELOADE" +
      "D\020\002\022\023\n\017ALREADY_RUNNING\020\003\022\033\n\027ENGINE_VERSI" +
      "ON_MISMATCH\020\004\022\020\n\014DATA_MISSING\020\005\022\017\n\013DATA_" +
      "BROKEN\020\006\022\020\n\014MMAP_FAILURE\020\007\022\023\n\017INSTALL_FA" +
      "ILURE\020\010\022\021\n\rUNKNOWN_ERROR\020\tBD\n.org.mozc.a" +
      "ndroid.inputmethod.japanese.protobufB\022Pr" +
      "otoEngineBuilder"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_mozc_EngineReloadRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_mozc_EngineReloadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mozc_EngineReloadRequest_descriptor,
        new java.lang.String[] { "EngineType", "FilePath", "InstallLocation", "MagicNumber", });
    internal_static_mozc_EngineReloadResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_mozc_EngineReloadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_mozc_EngineReloadResponse_descriptor,
        new java.lang.String[] { "Status", "Request", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
